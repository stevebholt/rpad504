---
title: "Lab 2"
author: "Stephen B. Holt"
format:
  html:
   code-overflow: wrap
   code-block-bg: true
   code-copy: hover
---

# Overview of Lab 2

In this week's lab, we will learn the basics of pulling data from a public data source (in this case, [IPUMS](https://www.ipums.org/)), downloading the data in a format we want (in this case Stata), and using that data to create some variables and a summary table. We will be working with data from the American Community Survey and decennial census conducted by the U.S. Census Bureau. The data is rich and provides a great deal of information about the U.S. population in terms of income, demographics, and so on. For our lab, we will focus simply on the living conditions, demographics, family attributes, and income mix at various levels of total income. We'll start by using IPUMS to download the data, which requires an IPUMS login.

# Downloading Data

We will start our workflow with a typical routine:

1. Download the data.
2. Move the data to our data subfolder in our class folder.
3. Begin a new .do file with our opening lines.

But first, let's download the data. IPUMS provides a harmonized set of files to enable downloading data across years and standardizing the format of variables for ease of use. Part of how that's done is using queries in the backend (we'll get to that later in the semester) prompted by a fairly straightfoward user interface (UI) on the frontend. We'll be using the [IPUMS ACS data](https://usa.ipums.org/usa/index.shtml).

The link to the landing page should look like this:

![Center of the IPUMS ACS page](landingpage.png)

We want to do our own analysis using our own tools, so let's go ahead and click "Get Data." From there, we'll land at a starting menu that looks like this:

![](ipumsdata.png)

From here, we'll want to make sure we are logged in - use the login button at the top right of the screen - and then we will begin by selecting samples using the big blue "Select Samples" button on the left. Scrolling down a bit, you will see a list of potential samples with some already checked. 

![](samplesmenu.png)

The ACS is collected annually and sampled households are not eligible for resample for 5 years. There are a variety of caveats, subsamples, and other considerations that warrant reading some of the codebooks when doing something more sophisticated than a class exercise, but for our purposes, we will be using fairly common variables collected in most years in a pretty standard format. The sample years selected will determine the set of variables that are available in all years and the samples to be included in our final dataset. For the purposes of this exercise, let's just select 2018, 2019, 2021, and 2022 and deselect everything else in this window. We will then hit "Submit Sample Selections" at the top of the screen.

Notice that the data cart at the top now has "4 samples" in it: ![](datacart1.png)

This means that as we look at variables, we'll have indicators for the variable availability in those four samples (i.e., the four years of the ACS we chose) and we can assemble a dataset with consistent variables measured in all the years we've chosen. We'll select variables using the "Household" dropdown and the "Person" dropdown. Let's start with "Household." Hovering your mouse over the dropdown should pull up a submenu with several options. For now, we'll select "Geographic," which will bring us here:

![](geographic.png)

On the right, you will see columns underneath the years of ACS data we have selected. An "X" in those columns indicates that a given variable (the rows) is available in that year of data. In general, it's a good idea to only include variables available in all years you are working with, at least as you're learning and getting familiar with data analysis.

On the left, you'll see little blue circles with plus signs ![](blueplus.png) next to different variable names. Clicking those will add the variable to our dataset request and convert it to a box with a checkmark ![](box.png). For now, we will just add "REGION," "STATEFIP," and "COUNTYFIP" to our data by clicking the circled plus marks.

::: callout-note
Notice that IPUMS shows us a variable name and a slightly more detailed variable label. You can also click on the variable name and see a detailed description of the variable from its codebook entry and documentation. IPUMS divides this cleanly so you can see the codes, any technical notes about the construction of the variable, and even the specific text of the question from the survey. This is the Gold Standard of data documentation to which all public data warehouses should aspire. It also captures a nested version of good data documentation practices: a variable name that is intuitive for technical users and consistent across years, a label that is a short description in plain language, and detailed documentation about how the variable is collected and what it measures.
:::

Now, we will collect some demographic, education, and income variables. 

1. Under the "Person" menus, go to the "Demographic" submenu and select "SEX," "AGE," and "MARST." 
2. Go to the "Race, Ethnicity, and Nativity" submenu of the "Person" menu and select "RACHSING," "RACE," "HISPAN," and "CITIZEN."
3. Under the "Education" submenu, select "SCHOOL," "EDUC," and "DEGFIELD."
4. Under the "Income" submenu, select the following:

![](incomevars.png)
5. Under the "Work" submenu, select "EMPSTAT" and "LABFORCE."
6. Finally, under the "Place of Work and Travel Time," select "TRANWORK," "CARPOOL," "RIDERS," and "TRANTIME."

The data cart at the top right should now show 37 variables across 4 samples selected: ![](datacart2.png)

Now, in the data cart, we are going to click on "View Cart." This will bring us to our data extraction tool.

![The data cart preview](datacart3.png)

Here, you'll see a list of your variables and their availability across your selected samples (in this case, years of ACS data). We will then click the "Create Data Extract" button at the top. This will take us to a preview of our extract:

![Data Extract Summary](dataextract1.png)
Notice that the format for the data is a `.dat` file type. This is a flat file. Technically Stata has the tools to import data from any file type, which we will get into later in the semester, but IPUMS has the decency to provide us options for what format we want our data in. We will click the change link in the format row and arrive here:

![Data Extract Format Selection Window](dataextract2.png)

We will go ahead and select "Stata" and "Apply Selections." We won't select any of the other options and will simply click "Submit Extract" at the bottom.

::: callout-note
Take note that when the .dat flat file is selected, IPUMS provides a zip folder with code to import the data into a variety of statistical software. The code for Stata will be a .do file and you would simply edit the code to point to where the .dat file is saved on your computer and you can run the do file in Stata and import the code that way. This is a useful means by which many government agencies share public data in a way that is flexible for all users. Another Gold Standard practice for data sharing.
:::

You will notice that you will be at an extraction screen after submitting the request. The time it takes to process a request depends on how many variables and how many years you select, among other things. The more complicated the request, the longer the extraction processing time. IPUMS sends an email when your request is ready and you will have a link to download the data in this screen when it's ready.

# Using the Data
## Cleaning the Data
In lab 1, we learned the basics of working with Stata and some rudimentary tools for data cleaning: creating a new categorical variable using a set of indicator variables. Here, we are going to learn some shortcuts to re-coding variables and creating sets of mutually exclusive indicators[^1] from a categorical variable. We are also going to create variables that are functions of other variables. Once we have the elements we need for a table, we are going to create a table that presents a variety of variables for the full sample, by the 90/10 income split, and by White and Non-White.  

[^1]: "Mutually exclusive" means that each observation can only be in one category. Ideally, the sum of the categories adds up to 100 percent.

### User-Written Packages
First, we are going to install two packages that are not part of the standard Stata package set. Stata packages all get housed in an internet archive that can be accessed directly in Stata using the `ssc install` command. We will install `fre`, which is a user-written package that implements the `tabulate` command that we have already used in Stata but includes both variables codes and labels in the output. As you will come to see, this is very useful for getting a sense of how data is coded when we are at the cleaning stage of the data.

We are also going to install `estout`, which is actually a library of commands that all provide a very flexible way to make exportable tables from estimates stored in Stata's temporary memory.

To do this, run:

```{.stata}
ssc install fre, replace
ssc install estout, replace

```

### Creating New Variables
For this exercise, we are going to look at the characteristics we have overall and separately by income and some rough binaries of race and ethnicity. To do that, we will want to recode some variables using a combination of the `recode` command, attaching an option to the `tab` command, and creating a variable that is a function of other variables. Let's start with the `tab` command because it's quite straightforward. 

When we are making tables with categorical variables in them, it's quite useful to have indicator variables for each category. We could do this using the `gen` and `replace` route that we took in lab 1, but an alternate route is to use the `tab` command and attach the `, gen(stub)` option. Let's do this for race using the variable `rachsing` to get five indicator variables for each category of race.

```{.stata}
tab rachsing, gen(racecat)

```

Note that the `racecat` part in the `gen` option is telling Stata to name the indicator variables for each category `racecat#` where # is the number of the category.

Your output should look like this:

```{.stata}
. tab rachsing, gen(racecat)

             race: simplified |
race/ethnicity identification |      Freq.     Percent        Cum.
------------------------------+-----------------------------------
                        white |  6,634,498       68.35       68.35
       black/african american |    974,520       10.04       78.39
american indian/alaska native |     84,561        0.87       79.26
       asian/pacific islander |    591,554        6.09       85.35
              hispanic/latino |  1,421,558       14.65      100.00
------------------------------+-----------------------------------
                        Total |  9,706,691      100.00

```


and we should have a new series of indicators in our variable list:

![Bottom of Variables List Panel](tab1race.png)


We will go ahead and do the same thing for marital status (`marst`) and biological sex (`sex`). 

```{.stata}

tab marst, gen(marital)
tab sex, gen(bsex)

```

Now let's move on to sex, educational attainment, and transit mode taken to work. Let's use `fre` to take a look at these categorical variables.

```{.stata}

fre sex educ tranwork

```

Here, we get a series of tables that look like:

```
. fre educ tranwork

educ -- educational attainment [general version]
----------------------------------------------------------------------------------
                                     |      Freq.    Percent      Valid       Cum.
-------------------------------------+--------------------------------------------
Valid   0  n/a or no schooling       |     778620       5.95       5.95       5.95
        1  nursery school to grade 4 |     934263       7.14       7.14      13.10
        2  grade 5, 6, 7, or 8       |     828813       6.34       6.34      19.43
        3  grade 9                   |     266110       2.03       2.03      21.47
        4  grade 10                  |     292384       2.24       2.24      23.70
        5  grade 11                  |     328913       2.51       2.51      26.22
        6  grade 12                  |    3873003      29.61      29.61      55.83
        7  1 year of college         |    1488821      11.38      11.38      67.21
        8  2 years of college        |     882180       6.74       6.74      73.95
        10 4 years of college        |    2075039      15.86      15.86      89.82
        11 5+ years of college       |    1331923      10.18      10.18     100.00
        Total                        |   1.31e+07     100.00     100.00           
----------------------------------------------------------------------------------

tranwork -- means of transportation to work
----------------------------------------------------------------------------------------------------
                                                       |      Freq.    Percent      Valid       Cum.
-------------------------------------------------------+--------------------------------------------
Valid   0  n/a                                         |    7103702      54.31      54.31      54.31
        10 auto, truck, or van                         |    4813653      36.80      36.80      91.11
        20 motorcycle                                  |       8748       0.07       0.07      91.18
        31 bus                                         |      64683       0.49       0.49      91.67
        32 bus or trolley bus                          |      28865       0.22       0.22      91.89
        34 light rail, streetcar, or trolley (carro    |       4002       0.03       0.03      91.92
           pÃºblico in pr)                             |                                            
        35 streetcar or trolley car (publico in puerto |        816       0.01       0.01      91.93
           rico, 2000)                                 |                                            
        36 subway or elevated                          |      79579       0.61       0.61      92.54
        37 long-distance train or commuter train       |      26096       0.20       0.20      92.74
        38 taxicab                                     |      10578       0.08       0.08      92.82
        39 ferryboat                                   |       2567       0.02       0.02      92.84
        50 bicycle                                     |      28359       0.22       0.22      93.05
        60 walked only                                 |     162531       1.24       1.24      94.30
        70 other                                       |      59606       0.46       0.46      94.75
        80 worked at home                              |     686284       5.25       5.25     100.00
        Total                                          |   1.31e+07     100.00     100.00           
----------------------------------------------------------------------------------------------------

```

Notice how many categories there are? That's probably going to be overwhelming to look at in a table all together. We might want to collapse these categories into higher level categories. To do this, we'll use a new command: `recode`. This will be much simpler than our previous route of creating a new variable and then replacing it with a new value for each category. How tedious!

We'll start with `educ` since it's the most straightforward. Here, we might really only be concerned with a breakdown of people with no college, some college, and a Bachelor's degree or more. Maybe we go an extra mile and include a separate breakout for graduate degrees. Here, we'll use `recode` to define a smaller set of categories that include multiple categories from the original variable.

```{.stata}
recode educ (0/5 = 1 "Less than HS") (6 = 2 "HS") (7/8 = 3 "Some college") (10 = 4 "College degree") (11 = 5 "More than Bachelor's"), gen(educ5)
```







